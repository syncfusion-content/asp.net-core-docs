diff --git a/aspnet-core-toc.html b/aspnet-core-toc.html
index fdd66cd..163be1b 100644
--- a/aspnet-core-toc.html
+++ b/aspnet-core-toc.html
@@ -916,6 +916,21 @@
 			<li>
 				<a href="/aspnet-core/spreadsheet/getting-started">Getting Started</a>
 			</li>
+            <li>
+                <a href="/aspnet-core/spreadsheet/clipboard">Clipboard</a>
+            </li>
+            <li>
+                <a href="/aspnet-core/spreadsheet/searching">Searching</a>
+            </li>
+            <li>
+                <a href="/aspnet-core/spreadsheet/undo-redo">Undo and Redo</a>
+            </li>
+            <li>
+                <a href="/aspnet-core/spreadsheet/print">Print</a>
+            </li>
+            <li>
+                <a href="/aspnet-core/spreadsheet/keyboard-shortcuts">Keyboard Shortcuts</a>
+            </li>
        </ul>        
     </li>
     <li>
diff --git a/aspnet-core/Spreadsheet/Clipboard.md b/aspnet-core/Spreadsheet/Clipboard.md
new file mode 100644
index 0000000..52ba9f7
--- /dev/null
+++ b/aspnet-core/Spreadsheet/Clipboard.md
@@ -0,0 +1,109 @@
+---
+layout: post
+title: Clipboard with Spreadsheet widget for Syncfusion Essential ASP.NET Core
+description: How to use the Spreadsheet Clipboard
+platform: aspnet-core
+control: Spreadsheet
+documentation: ug
+---
+
+# Clipboard
+
+The Spreadsheet provides support for the clipboard operations (cut, copy, and paste). Clipboard operations can be enabled or disabled by setting `allow-clipboard` property in Spreadsheet.
+By default `allow-clipboard` property is `true`.
+
+## Cut
+
+This function cuts the selected range values and make it available in clipboard.
+
+You can do this by one of the following ways. 
+
+* Using "Ctrl + X" key.
+* Using Cut button of HOME tab in ribbon to perform cut operation.
+* Using Cut option in Context Menu.
+* Using [`cut`](https://help.syncfusion.com/api/js/ejspreadsheet#methods:xlclipboard-cut "cut") method.
+
+## Copy
+
+This function copies the selected range values and make it available in clipboard.
+
+You can do this by one of the following ways. 
+
+* Using "Ctrl + C" key.
+* Using Copy button of HOME tab in ribbon to perform copy operation.
+* Using Copy option in Context Menu.
+* Using [`copy`](https://help.syncfusion.com/api/js/ejspreadsheet#methods:xlclipboard-copy "copy") method.
+
+## Paste
+
+This function pastes the clipboard content to newly selected range. If you perform cut paste, clipboard contents are cleared whereas in copy paste the clipboard contents are maintained. 
+
+You have following options in Paste.
+
+* Paste Special - You can paste the values with formatting.
+* Paste - You can paste only the values.
+
+N> The default paste option is Paste Special. This is working only within the current Spreadsheet. If you copy the content from other sources, it will paste only the values in the Spreadsheet.
+
+You can do this by one of the following ways,
+
+* Using "Ctrl + V" key.
+* Using Paste button of HOME tab in ribbon to perform paste operation.
+* Using Paste option in Context Menu.
+* Using [`paste`](https://help.syncfusion.com/api/js/ejspreadsheet#methods:xlclipboard-paste "paste") method.
+
+The following code example describes the above behavior.
+
+{% tabs %}
+{% highlight cshtml %}
+
+<ej-spread-sheet id="Spreadsheet" allow-clipboard="true" load-complete="loadComplete">
+    <e-sheets>
+        <e-sheet>
+            <e-range-settings>
+                <e-range-setting datasource="ViewBag.Datasource"></e-range-setting>
+            </e-range-settings>
+        </e-sheet>
+    </e-sheets>
+</ej-spread-sheet>
+
+<script type="text/javascript">
+    function loadComplete() {
+        var xlClip = this.XLClipboard;
+        this.performSelection("G1:H3");
+        xlClip.cut(); // Cut the selected cells
+        //xlClip.copy();//Copy the selected cells.
+        this.performSelection("J4");
+        xlClip.paste();
+    }
+</script>
+
+{% endhighlight %}
+{% highlight c# %}
+
+namespace samplebrowser.Controllers.SpreadsheetASP
+{
+    public partial class SpreadsheetController : Controller
+    {
+        public ActionResult Default()
+        {
+            List<ItemDetail> lItems = new List<ItemDetail>();
+            lItems.Add(new ItemDetail() { ItemName = "Casual Shoes", Date = new DateTime(2014, 02, 14), Time = new DateTime(2014, 02, 14, 11, 34, 32), Quantity = 10, Price = 20, Amount = 200, Discount = 1, Profit = 10 });
+            lItems.Add(new ItemDetail() { ItemName = "Sports Shoes", Date = new DateTime(2014, 06, 11), Time = new DateTime(2014, 06, 11, 05, 56, 32), Quantity = 20, Price = 30, Amount = 600, Discount = 5, Profit = 50 });
+            lItems.Add(new ItemDetail() { ItemName = "Formal Shoes", Date = new DateTime(2014, 07, 27), Time = new DateTime(2014, 07, 27, 03, 32, 44), Quantity = 20, Price = 15, Amount = 300, Discount = 7, Profit = 27 });
+            lItems.Add(new ItemDetail() { ItemName = "Sandals & Floaters", Date = new DateTime(2014, 11, 21), Time = new DateTime(2014, 11, 21, 06, 23, 54), Quantity = 15, Price = 20, Amount = 300, Discount = 11, Profit = 67 });
+            lItems.Add(new ItemDetail() { ItemName = "Flip- Flops & Slippers", Date = new DateTime(2014, 06, 23), Time = new DateTime(2014, 06, 23, 12, 43, 59), Quantity = 30, Price = 10, Amount = 300, Discount = 10, Profit = 70 });
+            ViewBag.Datasource = lItems;
+            return View();
+        }
+    }
+}
+
+{% endhighlight %}
+{% endtabs %}
+
+The following output is displayed as a result of the above code example.
+
+![](Clipboard_images/Clipboard_img1.png)
+
+N> Similarly you can perform clipboard operations for shapes (Chart and Image).
\ No newline at end of file
diff --git a/aspnet-core/Spreadsheet/Clipboard_images/Clipboard_img1.png b/aspnet-core/Spreadsheet/Clipboard_images/Clipboard_img1.png
new file mode 100644
index 0000000..76eaaf2
Binary files /dev/null and b/aspnet-core/Spreadsheet/Clipboard_images/Clipboard_img1.png differ
diff --git a/aspnet-core/Spreadsheet/Keyboard-Shortcuts.md b/aspnet-core/Spreadsheet/Keyboard-Shortcuts.md
new file mode 100644
index 0000000..dd51c9e
--- /dev/null
+++ b/aspnet-core/Spreadsheet/Keyboard-Shortcuts.md
@@ -0,0 +1,416 @@
+---
+title: Keyboard shortcuts support for Spreadsheet widget in Syncfusion Essential ASP .NET Core
+description: Keyboard shortcuts support for Spreadsheet widget
+platform: aspnet-core
+control: Spreadsheet
+documentation: ug
+---
+# Keyboard Shortcuts
+
+<table>
+    <colgroup>
+        <col width="17%"/>
+    </colgroup>
+    <tr>
+        <th>
+            Shortcut
+        </th>
+        <th>
+            Description
+        </th>
+    </tr>
+    <tr>
+        <td>
+            Alt + Enter
+        </td>
+        <td>
+            In Cell editing mode, starts a new line in the same cell
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Alt + F1
+        </td>
+        <td>
+            Creates a {{'`Chart`' | markdownify}} from the selected cells
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Alt + T
+        </td>
+        <td>
+            Opens create {{'`Table`' | markdownify}} dialog box
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Backspace
+        </td>
+        <td>
+            Clears content of the active cell.<br>
+            Deletes one character to the left in the Formula Bar.<br>
+            In Cell editing mode, it deletes one character to the left of the insertion point.
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + \
+        </td>
+        <td>
+            To apply go to row difference for selected cells
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + 1
+        </td>
+        <td>
+            Opens {{'`Format`' | markdownify}} cell dialog box
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + 5
+        </td>
+        <td>
+            Applies or removes strikethrough
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + 8
+        </td>
+        <td>
+            Hides the selected columns
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + 9
+        </td>
+        <td>
+            Hides the selected rows
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + A
+        </td>
+        <td>
+            Selects the entire worksheet.If worksheet has data, Ctrl + A will selects current region. Pressing Ctrl + A second time selects the entire worksheet.
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + B
+        </td>
+        <td>
+            Applies or removes bold formatting
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + C
+        </td>
+        <td>
+            Copies the selected cells
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + D
+        </td>
+        <td>
+            Uses the {{'`Fill Down`' | markdownify}} command to copy the contents and format
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + F3
+        </td>
+        <td>
+            Opens name manager dialog box
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + I
+        </td>
+        <td>
+            Applies or removes italic formatting
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + K
+        </td>
+        <td>
+            Opens the {{'`Insert Hyperlink`' | markdownify}} dialog box for new hyperlinks or the Edit Hyperlink dialog box for selected existing hyperlinks
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + O
+        </td>
+        <td>
+            Displays {{'`Open`' | markdownify}} dialog box to open a file
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + P
+        </td>
+        <td>
+            Opens {{'`Print`' | markdownify}} dialog box
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + R
+        </td>
+        <td>
+            Uses the {{'`Fill Right`' | markdownify}} command to copy the contents and format
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + S
+        </td>
+        <td>
+            Saves the current workbook
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Space Bar
+        </td>
+        <td>
+            Selects the entire column of selected cells in a worksheet
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + U
+        </td>
+        <td>
+            Applies or removes underlining
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + &
+        </td>
+        <td>
+            Applies the outline border to the selected cells
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift  + _
+        </td>
+        <td>
+            Removes the outline border from the selected cells
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + ~
+        </td>
+        <td>
+            Applies the General format
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + $
+        </td>
+        <td>
+            Applies the Currency format
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + %
+        </td>
+        <td>
+            Applies the Percentage format
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + ^
+        </td>
+        <td>
+            Applies the Scientific format
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + #
+        </td>
+        <td>
+            Applies the Short Date format
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + @
+        </td>
+        <td>
+            Applies the Time format
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + !
+        </td>
+        <td>
+            Applies the Number format with two decimal places
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + 8
+        </td>
+        <td>
+            To show hidden column within the selection
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + 9
+        </td>
+        <td>
+            To show hidden row within the selection
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + D
+        </td>
+        <td>
+            Opens {{'`Delete`' | markdownify}} dialog box
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + Home
+        </td>
+        <td>
+            Extends the selection of cells to the beginning of the worksheet
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + I
+        </td>
+        <td>
+            Opens {{'`Insert`' | markdownify}} dialog box
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + F2
+        </td>
+        <td>
+            To expand or collapse ribbon content
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + O
+        </td>
+        <td>
+            Highlight all cells that contain comments
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Shift + |
+        </td>
+        <td>
+            To apply go to column difference for selected cells
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + V
+        </td>
+        <td>
+            Inserts the content of the clipboard based on active cell and replaces any selection. It can be performed after you have cut or copied cell contents.
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + X
+        </td>
+        <td>
+            Cuts the selected cells
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Y
+        </td>
+        <td>
+            Repeats the last action, if possible
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Ctrl + Z
+        </td>
+        <td>
+            Reverses the last action or to delete the last entry
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Delete
+        </td>
+        <td>
+            Delete selected cells
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Esc
+        </td>
+        <td>
+            Cancel edit mode and discard changes.
+        </td>
+    </tr>
+    <tr>
+        <td>
+            F2
+        </td>
+        <td>
+            Start edit
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Shift + F2
+        </td>
+        <td>
+            Adds or edits a cell comment
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Shift + F11
+        </td>
+        <td>
+            Inserts a new worksheet
+        </td>
+    </tr>
+    <tr>
+        <td>
+            Shift + Spacebar
+        </td>
+        <td>
+            Selects the entire row of selected cells in a worksheet
+        </td>
+    </tr>
+</table>
diff --git a/aspnet-core/Spreadsheet/Print.md b/aspnet-core/Spreadsheet/Print.md
new file mode 100644
index 0000000..0543cae
--- /dev/null
+++ b/aspnet-core/Spreadsheet/Print.md
@@ -0,0 +1,195 @@
+---
+layout: post
+title: Print with Spreadsheet widget for Syncfusion Essential ASP .NET Core
+description: How to use the Spreadsheet Print
+platform: aspnet-core
+control: Spreadsheet
+documentation: ug
+---
+
+# Print
+
+This feature is used to produce text and graphics from a computer screen or file into a sheet of paper. You can use `allow-printing` property in `e-print-settings` to enable/disable the print operation.
+
+You have following options in printing.
+
+* Print Sheet / Print Selected Area.
+* Print with Gridlines
+* Print with Headers
+
+## Print Sheet / Print Selected Area
+
+You can print the sheet or print the selected area by following ways,
+
+* Using the Print button or Print Selected button under Print group of PAGE LAYOUT tab in ribbon.
+* Using [`printSheet`](https://help.syncfusion.com/api/js/ejspreadsheet#methods:xlprint-printsheet "printSheet") or [`printSelection`](https://help.syncfusion.com/api/js/ejspreadsheet#methods:xlprint-printselection "printSelection") method to print the spreadsheet.
+
+The following code example describes the above behavior.
+
+{% tabs %}
+{% highlight cshtml %}
+
+<ej-button id="btnPrint" size="Medium" show-rounded-corner="true" width="80" click="printClick" text="Print" />
+<ej-button id="btnPrintSel" size="Medium" show-rounded-corner="true" click="printSelClick" text="Print Selected" />
+
+<ej-spread-sheet id="Spreadsheet">
+    <e-print-settings allow-printing="true"></e-print-settings>
+    <e-sheets>
+        <e-sheet>
+            <e-range-settings>
+                <e-range-setting datasource="ViewBag.Datasource"></e-range-setting>
+            </e-range-settings>
+        </e-sheet>
+    </e-sheets>
+</ej-spread-sheet>
+
+<script type="text/javascript">
+    function printClick(args) {
+        var xlObj = $("#Spreadsheet").ejSpreadsheet("instance");
+        xlObj.XLPrint.printSheet();
+    }
+    function printSelClick(args) {
+        var xlObj = $("#Spreadsheet").ejSpreadsheet("instance");
+        xlObj.XLPrint.printSelection();
+    }
+</script>
+    
+{% endhighlight %}
+{% highlight c# %}
+
+namespace samplebrowser.Controllers.SpreadsheetASP
+{
+    public partial class SpreadsheetController : Controller
+    {
+        public ActionResult Default()
+        {
+            List<ItemDetail> lItems = new List<ItemDetail>();
+            lItems.Add(new ItemDetail() { ItemName = "Casual Shoes", Date = new DateTime(2014, 02, 14), Time = new DateTime(2014, 02, 14, 11, 34, 32), Quantity = 10, Price = 20, Amount = 200, Discount = 1, Profit = 10 });
+            lItems.Add(new ItemDetail() { ItemName = "Sports Shoes", Date = new DateTime(2014, 06, 11), Time = new DateTime(2014, 06, 11, 05, 56, 32), Quantity = 20, Price = 30, Amount = 600, Discount = 5, Profit = 50 });
+            lItems.Add(new ItemDetail() { ItemName = "Formal Shoes", Date = new DateTime(2014, 07, 27), Time = new DateTime(2014, 07, 27, 03, 32, 44), Quantity = 20, Price = 15, Amount = 300, Discount = 7, Profit = 27 });
+            lItems.Add(new ItemDetail() { ItemName = "Sandals & Floaters", Date = new DateTime(2014, 11, 21), Time = new DateTime(2014, 11, 21, 06, 23, 54), Quantity = 15, Price = 20, Amount = 300, Discount = 11, Profit = 67 });
+            lItems.Add(new ItemDetail() { ItemName = "Flip- Flops & Slippers", Date = new DateTime(2014, 06, 23), Time = new DateTime(2014, 06, 23, 12, 43, 59), Quantity = 30, Price = 10, Amount = 300, Discount = 10, Profit = 70 });
+            ViewBag.Datasource = lItems;
+            return View();
+        }
+    }
+}
+
+{% endhighlight %}
+{% endtabs %}
+
+The following output is displayed as a result of the above code example.
+
+![](Print_images/Print_img1.png)
+
+![](Print_images/Print_img2.png)
+
+Print dialog with entire sheet in Chrome browser
+{:.caption}
+
+![](Print_images/Print_img3.png)
+
+Print dialog with selected area print in chrome browser
+{:.caption}
+
+## Print with Gridlines
+
+You have an option to print the spreadsheet with gridlines or without gridlines. You can do this by one of the following ways,
+
+* Check or uncheck the Gridlines option under Show group of PAGE LAYOUT tab in ribbon to print with Gridlines.
+* Using `show-gridlines` property to enable / disable the gridlines.
+
+The following code example describes the above behavior.
+
+{% tabs %}
+{% highlight cshtml %}
+
+<ej-spread-sheet id="Spreadsheet">
+    <e-sheets>
+        <e-sheet show-gridlines="false">
+            <e-range-settings>
+                <e-range-setting datasource="ViewBag.Datasource"></e-range-setting>
+            </e-range-settings>
+        </e-sheet>
+    </e-sheets>
+</ej-spread-sheet>
+    
+{% endhighlight %}
+{% highlight c# %}
+
+namespace samplebrowser.Controllers.SpreadsheetASP
+{
+    public partial class SpreadsheetController : Controller
+    {
+        public ActionResult Default()
+        {
+            List<ItemDetail> lItems = new List<ItemDetail>();
+            lItems.Add(new ItemDetail() { ItemName = "Casual Shoes", Date = new DateTime(2014, 02, 14), Time = new DateTime(2014, 02, 14, 11, 34, 32), Quantity = 10, Price = 20, Amount = 200, Discount = 1, Profit = 10 });
+            lItems.Add(new ItemDetail() { ItemName = "Sports Shoes", Date = new DateTime(2014, 06, 11), Time = new DateTime(2014, 06, 11, 05, 56, 32), Quantity = 20, Price = 30, Amount = 600, Discount = 5, Profit = 50 });
+            lItems.Add(new ItemDetail() { ItemName = "Formal Shoes", Date = new DateTime(2014, 07, 27), Time = new DateTime(2014, 07, 27, 03, 32, 44), Quantity = 20, Price = 15, Amount = 300, Discount = 7, Profit = 27 });
+            lItems.Add(new ItemDetail() { ItemName = "Sandals & Floaters", Date = new DateTime(2014, 11, 21), Time = new DateTime(2014, 11, 21, 06, 23, 54), Quantity = 15, Price = 20, Amount = 300, Discount = 11, Profit = 67 });
+            lItems.Add(new ItemDetail() { ItemName = "Flip- Flops & Slippers", Date = new DateTime(2014, 06, 23), Time = new DateTime(2014, 06, 23, 12, 43, 59), Quantity = 30, Price = 10, Amount = 300, Discount = 10, Profit = 70 });
+            ViewBag.Datasource = lItems;
+            return View();
+        }
+    }
+}
+
+{% endhighlight %}
+{% endtabs %}
+
+![](Print_images/Print_img4.png)
+
+Print dialog without gridlines in chrome browser
+{:.caption}
+
+## Print with Headings
+
+You have an option to print the spreadsheet with headers or without headers. You can do this by one of the following ways,
+
+* Check or uncheck the Headings option under Show group of PAGE LAYOUT tab in ribbon. 
+* Using `show-headings` property to enable / disable showHeadings.
+
+The following code example describes the above behavior.
+
+{% tabs %}
+{% highlight cshtml %}
+
+<ej-spread-sheet id="Spreadsheet">
+    <e-sheets>
+        <e-sheet show-headings="false">
+            <e-range-settings>
+                <e-range-setting datasource="ViewBag.Datasource"></e-range-setting>
+            </e-range-settings>
+        </e-sheet>
+    </e-sheets>
+</ej-spread-sheet>
+    
+{% endhighlight %}
+{% highlight c# %}
+
+namespace samplebrowser.Controllers.SpreadsheetASP
+{
+    public partial class SpreadsheetController : Controller
+    {
+        public ActionResult Default()
+        {
+            List<ItemDetail> lItems = new List<ItemDetail>();
+            lItems.Add(new ItemDetail() { ItemName = "Casual Shoes", Date = new DateTime(2014, 02, 14), Time = new DateTime(2014, 02, 14, 11, 34, 32), Quantity = 10, Price = 20, Amount = 200, Discount = 1, Profit = 10 });
+            lItems.Add(new ItemDetail() { ItemName = "Sports Shoes", Date = new DateTime(2014, 06, 11), Time = new DateTime(2014, 06, 11, 05, 56, 32), Quantity = 20, Price = 30, Amount = 600, Discount = 5, Profit = 50 });
+            lItems.Add(new ItemDetail() { ItemName = "Formal Shoes", Date = new DateTime(2014, 07, 27), Time = new DateTime(2014, 07, 27, 03, 32, 44), Quantity = 20, Price = 15, Amount = 300, Discount = 7, Profit = 27 });
+            lItems.Add(new ItemDetail() { ItemName = "Sandals & Floaters", Date = new DateTime(2014, 11, 21), Time = new DateTime(2014, 11, 21, 06, 23, 54), Quantity = 15, Price = 20, Amount = 300, Discount = 11, Profit = 67 });
+            lItems.Add(new ItemDetail() { ItemName = "Flip- Flops & Slippers", Date = new DateTime(2014, 06, 23), Time = new DateTime(2014, 06, 23, 12, 43, 59), Quantity = 30, Price = 10, Amount = 300, Discount = 10, Profit = 70 });
+            ViewBag.Datasource = lItems;
+            return View();
+        }
+    }
+}
+
+{% endhighlight %}
+{% endtabs %}
+
+![](Print_images/Print_img5.png)
+
+Print dialog without headings in chrome browser
+{:.caption}
diff --git a/aspnet-core/Spreadsheet/Print_images/Print_img1.png b/aspnet-core/Spreadsheet/Print_images/Print_img1.png
new file mode 100644
index 0000000..89e2445
Binary files /dev/null and b/aspnet-core/Spreadsheet/Print_images/Print_img1.png differ
diff --git a/aspnet-core/Spreadsheet/Print_images/Print_img2.png b/aspnet-core/Spreadsheet/Print_images/Print_img2.png
new file mode 100644
index 0000000..3f47a1f
Binary files /dev/null and b/aspnet-core/Spreadsheet/Print_images/Print_img2.png differ
diff --git a/aspnet-core/Spreadsheet/Print_images/Print_img3.png b/aspnet-core/Spreadsheet/Print_images/Print_img3.png
new file mode 100644
index 0000000..602bfc6
Binary files /dev/null and b/aspnet-core/Spreadsheet/Print_images/Print_img3.png differ
diff --git a/aspnet-core/Spreadsheet/Print_images/Print_img4.png b/aspnet-core/Spreadsheet/Print_images/Print_img4.png
new file mode 100644
index 0000000..77e74b1
Binary files /dev/null and b/aspnet-core/Spreadsheet/Print_images/Print_img4.png differ
diff --git a/aspnet-core/Spreadsheet/Print_images/Print_img5.png b/aspnet-core/Spreadsheet/Print_images/Print_img5.png
new file mode 100644
index 0000000..be24704
Binary files /dev/null and b/aspnet-core/Spreadsheet/Print_images/Print_img5.png differ
diff --git a/aspnet-core/Spreadsheet/Searching.md b/aspnet-core/Spreadsheet/Searching.md
new file mode 100644
index 0000000..2320d94
--- /dev/null
+++ b/aspnet-core/Spreadsheet/Searching.md
@@ -0,0 +1,149 @@
+---
+layout: post
+title: Searching with Spreadsheet widget for Syncfusion Essential ASP.NET Core
+description: How to enable Searching and its functionalities
+platform: aspnet-core
+control: Spreadsheet
+documentation: ug
+--- 
+
+# Searching
+
+This feature is used to search the contents in the Spreadsheet. You can use `allow-searching` property to enable or disable this feature.
+
+You have following options in Searching.
+
+* Find
+* Replace
+* GoTo
+* GoTo Special
+
+## Find
+
+This is used to search the contents of a cell. You can do this by one of the following ways,
+
+* Using "Find" option in Find and Select button of OTHERS tab in ribbon to open the Find and Replace dialog.
+* Using [`findNext`](https://help.syncfusion.com/api/js/ejspreadsheet#methods:xlsearch-findnext "findNext") and [`findPrevious`](https://help.syncfusion.com/api/js/ejspreadsheet#methods:xlsearch-findprevious "findPrevious") methods to search the given value in workbook.
+* Using "Ctrl + F" key to open the Find and Replace dialog with Find tab enabled.
+
+The following output is displayed as a result of Find and Replace dialog with Find tab enabled.
+
+![](Searching_images/Searching_img2.png)
+
+You can customize the following settings in find option.
+
+* Match Case - Search content should have same casing compared with the cell content.
+* Match Entire Cell Content - Search content should match with entire cell content.
+* Look in - You can search the contents by values, formulas and comments.
+* Within - You can search the content within the sheet or workbook.
+* Search - You can search the contents by rows or columns.
+* Replace Direction - You can replace the contents by up or down direction.
+
+![](Searching_images/Searching_img3.png)
+
+Find and Replace dialog with Settings tab
+{:.caption}
+
+## Replace
+
+This is used to replace the contents of a cell. You can do this by one of the following ways.
+
+* Using "Replace" option in Find and Select button of OTHERS tab in ribbon to open the Find and Replace dialog.
+* Using [`replaceAllByBook`](https://help.syncfusion.com/api/js/ejspreadsheet#methods:xlsearch-replaceallbybook "replaceAllByBook") or [`replaceAllBySheet`](https://help.syncfusion.com/api/js/ejspreadsheet#methods:xlsearch-replaceallbysheet "replaceAllBySheet") method to replace the contents.
+* Using "Ctrl + R" key to open the Find and Replace dialog with Replace tab enabled.
+
+![](Searching_images/Searching_img4.png)
+
+Find and Replace dialog with Replace tab
+{:.caption}
+
+The following code example describes the above behavior.
+
+{% tabs %}
+{% highlight cshtml %}
+
+<ej-spread-sheet id="Spreadsheet" load-complete="loadComplete">
+    <e-sheets>
+        <e-sheet>
+            <e-range-settings>
+                <e-range-setting datasource="ViewBag.Datasource"></e-range-setting>
+            </e-range-settings>
+        </e-sheet>
+    </e-sheets>
+</ej-spread-sheet>
+
+<script type="text/javascript">
+    function loadComplete(args) {
+        var xlSearch = this.XLSearch;
+        if (!this.isImport) {
+            xlSearch.replaceAllBySheet("Shoes", "Slippers", true, false); 
+            //xlSearch.replaceAllByBook("Shoes", "Slippers", true, false);
+        }
+    }
+</script>
+    
+{% endhighlight %}
+{% highlight c# %}
+
+namespace samplebrowser.Controllers.SpreadsheetASP
+{
+    public partial class SpreadsheetController : Controller
+    {
+        public ActionResult Default()
+        {
+            List<ItemDetail> lItems = new List<ItemDetail>();
+            lItems.Add(new ItemDetail() { ItemName = "Casual Shoes", Date = new DateTime(2014, 02, 14), Time = new DateTime(2014, 02, 14, 11, 34, 32), Quantity = 10, Price = 20, Amount = 200, Discount = 1, Profit = 10 });
+            lItems.Add(new ItemDetail() { ItemName = "Sports Shoes", Date = new DateTime(2014, 06, 11), Time = new DateTime(2014, 06, 11, 05, 56, 32), Quantity = 20, Price = 30, Amount = 600, Discount = 5, Profit = 50 });
+            lItems.Add(new ItemDetail() { ItemName = "Formal Shoes", Date = new DateTime(2014, 07, 27), Time = new DateTime(2014, 07, 27, 03, 32, 44), Quantity = 20, Price = 15, Amount = 300, Discount = 7, Profit = 27 });
+            lItems.Add(new ItemDetail() { ItemName = "Sandals & Floaters", Date = new DateTime(2014, 11, 21), Time = new DateTime(2014, 11, 21, 06, 23, 54), Quantity = 15, Price = 20, Amount = 300, Discount = 11, Profit = 67 });
+            lItems.Add(new ItemDetail() { ItemName = "Flip- Flops & Slippers", Date = new DateTime(2014, 06, 23), Time = new DateTime(2014, 06, 23, 12, 43, 59), Quantity = 30, Price = 10, Amount = 300, Discount = 10, Profit = 70 });
+            ViewBag.Datasource = lItems;
+            return View();
+        }
+    }
+}
+
+{% endhighlight %}
+{% endtabs %}
+
+The following output is displayed as a result of the above code example.
+
+![](Searching_images/Searching_img5.png)
+
+## Go To
+
+This feature is used to navigate to the particular cell in the worksheet or workbook.
+
+You can do this by one of the following ways,
+
+* Using "Go To" option in Find and Select button of OTHERS tab in ribbon to open the Go To dialog.
+* Using "Ctrl + G" key to open the Go To dialog.
+
+![](Searching_images/Searching_img6.png)
+
+Go To dialog
+{:.caption}
+
+The following output is displayed as a result of goto to cell "F10".
+
+![](Searching_images/Searching_img7.png)
+
+## GoTo Special
+
+This feature is used to quickly select cells of a specified type within the worksheet. You can do this by following ways,
+
+* Using "Go to Special" option in Find and Select button of OTHERS tab in ribbon to open the Go To dialog.
+
+* Using "Go to Formulas" option in Find and Select button of OTHERS tab in ribbon to highlight the cells, which contains formulas.
+
+* Using "Go to Comments" option in Find and Select button of OTHERS tab in ribbon to highlight the cells, which contains comments.
+
+* Using "Go to Conditional Formats" option in Find and Select button of OTHERS tab in ribbon to highlight conditional format applied cells.
+
+* Using "Go to Data Validation" option in Find and Select button of OTHERS tab in ribbon to highlight the data validation applied cells.
+
+* Using "Go to Constants" option in Find and Select button of OTHERS tab in ribbon to highlight the cells, which contains constant values.
+
+The following output is displayed as a result of goto constants which selects the cells containing constant values.
+
+![](Searching_images/Searching_img8.png)
\ No newline at end of file
diff --git a/aspnet-core/Spreadsheet/Searching_images/Searching_img2.png b/aspnet-core/Spreadsheet/Searching_images/Searching_img2.png
new file mode 100644
index 0000000..dbbc6db
Binary files /dev/null and b/aspnet-core/Spreadsheet/Searching_images/Searching_img2.png differ
diff --git a/aspnet-core/Spreadsheet/Searching_images/Searching_img3.png b/aspnet-core/Spreadsheet/Searching_images/Searching_img3.png
new file mode 100644
index 0000000..3de7caa
Binary files /dev/null and b/aspnet-core/Spreadsheet/Searching_images/Searching_img3.png differ
diff --git a/aspnet-core/Spreadsheet/Searching_images/Searching_img4.png b/aspnet-core/Spreadsheet/Searching_images/Searching_img4.png
new file mode 100644
index 0000000..9c3ee99
Binary files /dev/null and b/aspnet-core/Spreadsheet/Searching_images/Searching_img4.png differ
diff --git a/aspnet-core/Spreadsheet/Searching_images/Searching_img5.png b/aspnet-core/Spreadsheet/Searching_images/Searching_img5.png
new file mode 100644
index 0000000..f337145
Binary files /dev/null and b/aspnet-core/Spreadsheet/Searching_images/Searching_img5.png differ
diff --git a/aspnet-core/Spreadsheet/Searching_images/Searching_img6.png b/aspnet-core/Spreadsheet/Searching_images/Searching_img6.png
new file mode 100644
index 0000000..d1c0d18
Binary files /dev/null and b/aspnet-core/Spreadsheet/Searching_images/Searching_img6.png differ
diff --git a/aspnet-core/Spreadsheet/Searching_images/Searching_img7.png b/aspnet-core/Spreadsheet/Searching_images/Searching_img7.png
new file mode 100644
index 0000000..237455c
Binary files /dev/null and b/aspnet-core/Spreadsheet/Searching_images/Searching_img7.png differ
diff --git a/aspnet-core/Spreadsheet/Searching_images/Searching_img8.png b/aspnet-core/Spreadsheet/Searching_images/Searching_img8.png
new file mode 100644
index 0000000..e3e403f
Binary files /dev/null and b/aspnet-core/Spreadsheet/Searching_images/Searching_img8.png differ
diff --git a/aspnet-core/Spreadsheet/Undo-Redo.md b/aspnet-core/Spreadsheet/Undo-Redo.md
new file mode 100644
index 0000000..b8897b4
--- /dev/null
+++ b/aspnet-core/Spreadsheet/Undo-Redo.md
@@ -0,0 +1,28 @@
+---
+layout: post
+title: Undo Redo with Spreadsheet widget for Syncfusion Essential ASP.NET Core
+description: How to enable Undo Redo and its functionalities
+platform: aspnet-core
+control: Spreadsheet
+documentation: ug
+--- 
+
+# Undo and Redo
+
+Spreadsheet provides the support to perform undo and redo operations. You can set `allow-undo-redo` property as `true` to enable undo redo feature. You can also use `undoredo-step` property to limit the undo redo action.
+
+N> Default value of `undoredo-step` property is 20. You can perform 20 undo or redo actions.
+
+## Undo the last action
+
+Undo reverses the last action you performed with spreadsheet. You can do this by following ways.
+
+* Use Undo button of HOME tab in ribbon.
+* Use "Ctrl + Z" key.
+
+## Redo the action
+
+Redo reverses the last undo action you performed with spreadsheet. You can do this by following ways.
+
+* Use Redo button of HOME tab in ribbon.
+* Use "Ctrl + Y" key.
\ No newline at end of file
